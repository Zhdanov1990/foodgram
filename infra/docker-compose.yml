version: "3.8"

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ../backend
    container_name: foodgram_backend
    restart: always
    env_file:
      - ../.env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

  frontend:
    build:
      context: ../frontend
      args:
        npm_config_legacy_peer_deps: 'true'
    container_name: infra_frontend
    restart: always
    # Сначала устанавливаем зависимости, собираем и копируем в общий volume
    command: >
      sh -c "npm install --legacy-peer-deps &&
             npm run build &&
             cp -r build/* /usr/share/nginx/html/"
    depends_on:
      - backend
    volumes:
      - static_volume:/usr/share/nginx/html:ro

  nginx:
    container_name: foodgram_gateway
    image: nginx:1.25.4-alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/share/nginx/html:ro
      - media_volume:/media
      - ../docs:/usr/share/nginx/html/api/docs:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
