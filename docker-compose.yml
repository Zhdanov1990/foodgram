version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    image: zhdanova686/foodgram_backend:latest
    container_name: foodgram_backend
    restart: always
    env_file:
      - ./.env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py load_all_data &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    ports:
      - "8001:8000"
    volumes:
      - django_static_volume:/app/static
      - media_volume:/app/media

  frontend:
    image: zhdanova686/foodgram_frontend:latest
    container_name: infra_frontend
    restart: "no"
    volumes:
      - frontend_volume:/static_frontend_build
    command: ["sh", "-c", "cp -r /build/* /static_frontend_build/"]

  nginx:
    build:
      context: ./infra
      dockerfile: Dockerfile
    container_name: foodgram_gateway
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    volumes:
      - frontend_volume:/usr/share/nginx/html:ro
      - django_static_volume:/usr/share/nginx/static:ro
      - media_volume:/media:ro

volumes:
  postgres_data:
  frontend_volume:
  django_static_volume:
  media_volume:
