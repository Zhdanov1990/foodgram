name: Foodgram CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test_backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: foodgram
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U foodgram_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_password
      DB_HOST: localhost
      DB_PORT: 5432
      DEBUG: 'False'
      SECRET_KEY: testsecretkey
      ALLOWED_HOSTS: localhost,127.0.0.1

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run migrations
        run: |
          python backend/manage.py migrate

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 backend/

      - name: Run tests
        run: |
          pytest backend/

  build_backend:
    needs: test_backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          load: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: false
          load: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build gateway image
        uses: docker/build-push-action@v4
        with:
          context: ./infra
          file: ./infra/Dockerfile
          push: false
          load: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push_to_docker_hub:
    needs: [build_backend, build_frontend, build_gateway]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push gateway image
        uses: docker/build-push-action@v4
        with:
          context: ./infra
          file: ./infra/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: push_to_docker_hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ~/foodgram/infra
            docker compose pull
            docker compose up -d 