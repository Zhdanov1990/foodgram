name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (for Pillow)
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev zlib1g-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt

      - name: Run linters and tests
        env:
          DB_USER: django_user
          DB_PASSWORD: mysecretpassword
          DB_NAME: db
          DB_HOST: localhost
          DB_PORT: 5432
          SECRET_KEY: test_secret_key
        run: |
          python -m flake8 backend/
          cd backend/
          python manage.py test

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: zhdanova686/foodgram_backend:latest

  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install frontend dependencies
        run: |
          cd frontend/
          npm ci
      - name: Run frontend tests
        run: |
          cd frontend/
          npm run test

  build_frontend_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: zhdanova686/foodgram_frontend:latest

  build_gateway_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ./infra/Dockerfile
          push: true
          tags: zhdanova686/foodgram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@v3

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml,infra/nginx.conf"
          target: "foodgram"

      - name: SSH deploy commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic --no-input 